const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=M(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=M(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=M(e);n.set(o+t,s),n.delete(o)},M=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":68,\"nextId\":68,\"documentIds\":{\"0\":\"v-c3f4ab3c\",\"1\":\"v-c3f4ab3c@0\",\"2\":\"v-c3f4ab3c@1\",\"3\":\"v-68bfed9d\",\"4\":\"v-68bfed9d@0\",\"5\":\"v-68bfed9d@1\",\"6\":\"v-15cf598c\",\"7\":\"v-15cf598c#介绍\",\"8\":\"v-15cf598c#安装\",\"9\":\"v-15cf598c@0\",\"10\":\"v-15cf598c@1\",\"11\":\"v-c63cc1b8\",\"12\":\"v-c63cc1b8#安装\",\"13\":\"v-c63cc1b8#路径参数\",\"14\":\"v-c63cc1b8#预设值\",\"15\":\"v-c63cc1b8#请求体\",\"16\":\"v-c63cc1b8@0\",\"17\":\"v-c63cc1b8@1\",\"18\":\"v-425bb88e\",\"19\":\"v-425bb88e@0\",\"20\":\"v-425bb88e@1\",\"21\":\"v-eb5902b6\",\"22\":\"v-eb5902b6#ubuntu-安装搭建-gstreamer-搭建rtsp服务器\",\"23\":\"v-eb5902b6#安装依赖库\",\"24\":\"v-eb5902b6#源码编译-gst-rtsp-server\",\"25\":\"v-eb5902b6#macbook-安装-gstreamer-和-gst-rtsp-server\",\"26\":\"v-eb5902b6#安装brew\",\"27\":\"v-eb5902b6#使用brew-安装gstreamer\",\"28\":\"v-eb5902b6@0\",\"29\":\"v-eb5902b6@1\",\"30\":\"v-095d97a8\",\"31\":\"v-095d97a8#使用-imagezmq-传输视频流\",\"32\":\"v-095d97a8#视频流发送端\",\"33\":\"v-095d97a8#视频流接收端\",\"34\":\"v-095d97a8#使用opencv从-接受rtsp视频流\",\"35\":\"v-095d97a8#参考\",\"36\":\"v-095d97a8@0\",\"37\":\"v-095d97a8@1\",\"38\":\"v-782d087c\",\"39\":\"v-782d087c#安装步骤\",\"40\":\"v-782d087c@0\",\"41\":\"v-782d087c@1\",\"42\":\"v-0237e3d3\",\"43\":\"v-0237e3d3#markdown-使用教程记录\",\"44\":\"v-0237e3d3#标题\",\"45\":\"v-0237e3d3#列表\",\"46\":\"v-0237e3d3#区块\",\"47\":\"v-0237e3d3#分割线\",\"48\":\"v-0237e3d3#表格\",\"49\":\"v-0237e3d3#图片\",\"50\":\"v-0237e3d3#字体\",\"51\":\"v-0237e3d3#emoji\",\"52\":\"v-0237e3d3@0\",\"53\":\"v-0237e3d3@1\",\"54\":\"v-b2dff0be\",\"55\":\"v-b2dff0be#异地组网技术-zerotier\",\"56\":\"v-b2dff0be#_1-安装和配置zerotier\",\"57\":\"v-b2dff0be#_2-创建网络\",\"58\":\"v-b2dff0be#_3-加入网络\",\"59\":\"v-b2dff0be@0\",\"60\":\"v-b2dff0be@1\",\"61\":\"v-9e35ee3c\",\"62\":\"v-6c0afdb6\",\"63\":\"v-ebda9692\",\"64\":\"v-145ac574\",\"65\":\"v-eb9cda24\",\"66\":\"v-fa04bd5c\",\"67\":\"v-5d2002d2\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1],\"4\":[null,null,1],\"5\":[null,null,1],\"6\":[2],\"7\":[1,28],\"8\":[1,4],\"9\":[null,null,1],\"10\":[null,null,2],\"11\":[2,32],\"12\":[1,55],\"13\":[1,23],\"14\":[1,40],\"15\":[1,82],\"16\":[null,null,1],\"17\":[null,null,2],\"18\":[1],\"19\":[null,null,1],\"20\":[null,null,1],\"21\":[2],\"22\":[4],\"23\":[1,21],\"24\":[4,41],\"25\":[7],\"26\":[2,15],\"27\":[2,30],\"28\":[null,null,1],\"29\":[null,null,2],\"30\":[1],\"31\":[3],\"32\":[1,61],\"33\":[1,23],\"34\":[2,49],\"35\":[2,12],\"36\":[null,null,1],\"37\":[null,null,4],\"38\":[2],\"39\":[1,51],\"40\":[null,null,1],\"41\":[null,null,1],\"42\":[2],\"43\":[2],\"44\":[1,13],\"45\":[1,7],\"46\":[1,13],\"47\":[1,3],\"48\":[1,25],\"49\":[1,13],\"50\":[1,24],\"51\":[1,25],\"52\":[null,null,1],\"53\":[null,null,1],\"54\":[2],\"55\":[2,11],\"56\":[3,5],\"57\":[3,5],\"58\":[3,33],\"59\":[null,null,1],\"60\":[null,null,1],\"61\":[1,3],\"62\":[1,3],\"63\":[1],\"64\":[1],\"65\":[1],\"66\":[2],\"67\":[1]},\"averageFieldLength\":[1.5875494310338218,19.25907568025843,1.080121126105851],\"storedFields\":{\"0\":{\"h\":\"AIGC工具介绍\"},\"1\":{\"c\":[\"AI\"]},\"2\":{\"c\":[\"tools\"]},\"3\":{\"h\":\"提示词工程\"},\"4\":{\"c\":[\"AI\"]},\"5\":{\"c\":[\"tools\"]},\"6\":{\"h\":\"aiortc 学习\"},\"7\":{\"h\":\"介绍\",\"t\":[\"aiortc 是一个用于 WebRTC（Web 实时通信）的 Python 库。它建立在 asyncio 库之上，支持异步和并发编程。aiortc 提供了创建 WebRTC 会话、处理音视频流和数据传输的功能。可以构建视频会议、音视频聊天和数据共享等应用。它支持信令服务器和 STUN/TURN 服务器，处理网络连接问题。aiortc 提供了简洁的 API 和丰富的功能，帮助你轻松实现基于 WebRTC 的实时通信解决方案。\"]},\"8\":{\"h\":\"安装\",\"t\":[\"pip install aiortc \"]},\"9\":{\"c\":[\"使用指南\"]},\"10\":{\"c\":[\"web\",\"aiortc\"]},\"11\":{\"h\":\"FastAPI 学习\",\"t\":[\"FastAPI 是一个用于构建API的现代、快速（高性能）的web框架，使用Python 3.6+并基于标准的Python类型提示。它具有如下这些优点：快速：可与NodeJS和Go比肩的极高性能（归功于Starlette和Pydantic）；高效编码：提高功能开发速度约200％至300％；更少bug：减少约40％的人为（开发者）导致错误；智能：极佳的编辑器支持，处处皆可自动补全，减少调试时间；简单：设计的易于使用和学习，阅读文档的时间更短；简短：使代码重复最小化，通过不同的参数声明实现丰富功能；健壮：生产可用级别的代码。\"]},\"12\":{\"h\":\"安装\",\"t\":[\"#安装fastapi pip3 install fastapi #安装AIGC服务器 pip3 install \\\"uvicorn[standard]\\\" \",\"一个简单的例子：\",\"from typing import Union from fastapi import FastAPI #创建一个 FastAPI「实例」 app = FastAPI() @app.get(\\\"/\\\") def read_root(): return {\\\"Hello\\\": \\\"World\\\"} @app.get(\\\"/items/{item_id}\\\") def read_item(item_id: int, q: Union[str, None] = None): return {\\\"item_id\\\": item_id, \\\"q\\\": q} \",\"运行\",\"uvicorn main:app --reload \",\"uvicorn main:app 命令含义\",\"main：main.py 文件。\",\"app：在 main.py 文件中通过 app = FastAPI() 创建的对象。\",\"--reload：让服务器在更新代码后重新启动。仅在开发时使用该选项。\",\"访问： http://127.0.0.1:8000，\",\"交互式 API 文档： http://127.0.0.1:8000/docs FastAPI会生成自定义文档，可直接查看api接口和接受的参数属性。\"]},\"13\":{\"h\":\"路径参数\",\"t\":[\"from fastapi import FastAPI app = FastAPI() # 使用与 python 格式化字符串相同的语法来声明路径的参数 @app.get(\\\"/items/{item_id}\\\") async def read_item(item_id: int): return {\\\"item_id\\\": item_id} # 路径参数 item_id 的值将作为参数 item_id 传递给 read_item() 函数。 \"]},\"14\":{\"h\":\"预设值\",\"t\":[\"from enum import Enum from fastapi import FastAPI # 创建一个 python 枚举 class ModelName(str, Enum): alexnet = \\\"alexnet\\\" resnet = \\\"resnet\\\" lenet = \\\"lenet\\\" app = FastAPI() @app.get(\\\"/models/{model_name}\\\") async def get_model(model_name: ModelName): if model_name is ModelName.alexnet: return {\\\"model_name\\\": model_name, \\\"message\\\": \\\"Deep Learning FTW!\\\"} if model_name.value == \\\"lenet\\\": return {\\\"model_name\\\": model_name, \\\"message\\\": \\\"LeCNN all the images\\\"} return {\\\"model_name\\\": model_name, \\\"message\\\": \\\"Have some residuals\\\"} \",\"相关信息\",\"python 枚举\"]},\"15\":{\"h\":\"请求体\",\"t\":[\"请求体是客户端发送给 API 的数据。\",\"响应体是 API 发送给客户端的数据。\",\"提示\",\"HTTP 请求方法：\",\"GET 用于获取资源，\",\"POST 用于提交数据，\",\"PUT 用于更新资源，\",\"DELETE 用于删除资源，\",\"PATCH 用于部分更新资源。\",\"使用 Pydantic 模型来声明请求体\",\"from typing import Union from fastapi import FastAPI # 从 pydantic 中导入 BaseModel： from pydantic import BaseModel # 创建数据模型 class Item(BaseModel): name: str description: Union[str, None] = None #默认值为None，是一个可选属性 price: float tax: Union[float, None] = None app = FastAPI() @app.post(\\\"/items/\\\") async def create_item(item: Item): return item \",\"请求文件 安装依赖库\",\"pip3 install python-multipart \",\"Fastapi 可通过 bytes 形式和 UploadFile 形式读取和接收文件内容；\",\"bytes形式是将文件存储在内存中，适合小型文件；\",\"UploadFile形式忽略内存限制，可传输大型文件。\",\"from fastapi import FastAPI, File, UploadFile app = FastAPI() # bytes 形式 @app.post(\\\"/files/\\\") async def create_file(file: bytes = File(description=\\\"A file read as bytes\\\")): return {\\\"file_size\\\": len(file)} # UploadFile 形式 @app.post(\\\"/uploadfile/\\\") async def create_upload_file( file: UploadFile = File(description=\\\"A file read as UploadFile\\\"), ): return {\\\"filename\\\": file.filename} \"]},\"16\":{\"c\":[\"使用指南\"]},\"17\":{\"c\":[\"web\",\"FastAPI\"]},\"18\":{\"h\":\"gstreamer教程\"},\"19\":{\"c\":[\"使用指南\"]},\"20\":{\"c\":[\"gstreamer\"]},\"21\":{\"h\":\"Gstreamer——搭建RTSP服务器\"},\"22\":{\"h\":\"ubuntu 安装搭建 gstreamer 搭建RTSP服务器\"},\"23\":{\"h\":\"安装依赖库\",\"t\":[\"sudo apt install libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio \"]},\"24\":{\"h\":\"源码编译 gst-rtsp-server\",\"t\":[\"sudo apt install libgstreamer1.0-dev libgstrtspserver-1.0 \",\"克隆git库\",\"git clone https://github.com/GStreamer/gst-rtsp-server.git \",\"切到1.18分支\",\"cd gst-rtsp-server/ git checkout 1.18 \",\"编译\",\"./autogen.sh \",\"测试\",\"cd examples ./test-launch \\\"( videotestsrc ! x264enc ! rtph264pay name=pay0 pt=96 )\\\" \",\"播放rtsp流\",\"gst-launch-1.0 playbin uri=rtsp://127.0.0.1:8554/test \"]},\"25\":{\"h\":\"macbook 安装 gstreamer 和 gst-rtsp-server\"},\"26\":{\"h\":\"安装 brew\",\"t\":[\"/bin/bash -c \\\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\\\" \"]},\"27\":{\"h\":\"使用brew 安装gstreamer\",\"t\":[\"brew install gstreamer brew install gst-plugins-base brew install gst-plugins-good brew install gst-plugins-bad brew install gst-plugins-ugly brew install gst-libav brew install gst-rtsp-server brew install gst-editing-services brew install gst-devtools \",\"相关信息\",\"在使用brew安装gstreamer的时候会安装对应版本的python，其安装路径在/opt/homebrew/bin/python3。 在使用的时候要 souce ~/.zshrc。并使用 which python3，检查python路径。\"]},\"28\":{\"c\":[\"使用指南\"]},\"29\":{\"c\":[\"macbook\",\"gstreamer\"]},\"30\":{\"h\":\"视频流传输\"},\"31\":{\"h\":\"使用 imagezmq 传输视频流\"},\"32\":{\"h\":\"视频流发送端\",\"t\":[\"from imutils.video import VideoStream import imagezmq import socket import cv2 # 创建VideoCapture对象，参数0表示使用默认的摄像头 cap = cv2.VideoCapture(0) #ubuntu 的ip sender = imagezmq.ImageSender(connect_to='tcp://10.144.54.202:5555') cam_id = socket.gethostname() print(\\\"cam_id: \\\",cam_id) while True: # 读取视频流的帧 ret, frame = cap.read() sender.send_image(cam_id, frame) print(frame.shape) resized_frame = cv2.resize(frame, (640, 480)) cv2.imshow('Resized Frame', resized_frame) # 按下'q'键退出循环 if cv2.waitKey(1) & 0xFF == ord('q'): break # 释放VideoCapture对象 cap.release() # 关闭所有打开的窗口 cv2.destroyAllWindows() \"]},\"33\":{\"h\":\"视频流接收端\",\"t\":[\"import cv2 import imagezmq image_hub = imagezmq.ImageHub() while True: cam_id, frame = image_hub.recv_image() # cv2.imshow(cam_id, frame) print(frame.shape) cv2.waitKey(1) image_hub.send_reply(b'OK') \"]},\"34\":{\"h\":\"使用opencv从 接受rtsp视频流\",\"t\":[\"import cv2 def main(): # RTSP视频流地址，包含用户名和密码 rtsp_url = 'rtsp://<USERNAME>:<PASSWORD>@<RTSP_SERVER_IP>:<RTSP_SERVER_PORT>/video' # 创建VideoCapture对象，连接到RTSP视频流 cap = cv2.VideoCapture(rtsp_url) while True: # 读取视频流的帧 ret, frame = cap.read() # 检查帧是否成功读取 if not ret: break # 在这里对帧进行处理，例如显示、保存等 cv2.imshow('Frame', frame) # 按下'q'键退出循环 if cv2.waitKey(1) & 0xFF == ord('q'): break # 释放VideoCapture对象 cap.release() # 关闭所有打开的窗口 cv2.destroyAllWindows() if __name__ == '__main__': main() \"]},\"35\":{\"h\":\"参考：\",\"t\":[\"https://towardsdatascience.com/live-video-streaming-using-multiple-smartphones-with-imagezmq-e260bd081224\"]},\"36\":{\"c\":[\"使用指南\"]},\"37\":{\"c\":[\"ImageZMQ\",\"video_streaming\",\"python\"]},\"38\":{\"h\":\"macbook 安装jupyter\"},\"39\":{\"h\":\"安装步骤\",\"t\":[\"终端执行pip安装命令；\",\"pip3 install jupyter \",\"启动jupyter\",\"jupyter notebook \",\"如有以下报错：\",\"zsh: command not found: jupyter\",\"则说明python的环境变量没有添加到 zsh 的配置文件中，把python的路径添加到zsh中即可首先查jupyter 安装信息\",\"zsh介绍\",\"zsh 和 bash 都是属于shell，但是比bash好用，拥有极其丰富的插件，强大 的自动补全参数、文件名以及自定义功能，可以大大提高linux效率。 而 .zshrc 是zsh的配置文件\",\"pip3 show jupyter \",\"zsh: command not found: jupyter\",\"找到python目录，拼出python的bin目录： /Users/lee_mac/Library/Python/3.9/bin\",\"在 ~ 目录下新建 .zshrc 文件，然后将python目录加进去。\",\"touch ~/.zshrc echo \\\"export PATH=/Users/lee_mac/Library/Python/3.9/bin\\\" >> ~/.zshrc \",\"OK啦！！！\\n😆😆😆😆😆\"]},\"40\":{\"c\":[\"使用指南\"]},\"41\":{\"c\":[\"mac\"]},\"42\":{\"h\":\"markdown 使用教程\"},\"43\":{\"h\":\"markdown 使用教程记录\"},\"44\":{\"h\":\"标题\",\"t\":[\"H1: # Header 1\",\"H2: ## Header 2\",\"H3: ### Header 3\",\"H4: #### Header 4\",\"H5: ##### Header 5\",\"H6: ###### Header 6\"]},\"45\":{\"h\":\"列表\",\"t\":[\"- Red - Green - Blue \",\"Red\",\"Green\",\"Blue\",\"* Red * Green * Blue \",\"Red\",\"Green\",\"Blue\",\"1. Red 2. Green 3. Blue \",\"Red\",\"Green\",\"Blue\"]},\"46\":{\"h\":\"区块\",\"t\":[\"> 最外层 > > 第一层嵌套 > > > 第二层嵌套 \",\"最外层\",\"第一层嵌套\",\"第二层嵌套\",\"> 区块中使用列表 > 1. 第一项 > 2. 第二项 > + 第一项 > + 第二项 > + 第三项 \",\"区块中使用列表\",\"第一项\",\"第二项\",\"第一项\",\"第二项\",\"第三项\",\"* 第一项 > 菜鸟教程 > 学的不仅是技术更是梦想 * 第二项 \",\"第一项 \",\"菜鸟教程 学的不仅是技术更是梦想\",\"第二项\"]},\"47\":{\"h\":\"分割线\",\"t\":[\"*** 和---和___都可以。\",\"*** --- ___ \"]},\"48\":{\"h\":\"表格\",\"t\":[\"|left |middle |right | |----------|:--------:|---------:| |1 |2 |3 | |4 |5 |6 | |7 |8 |9 | \",\"left\",\"middle\",\"right\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]},\"49\":{\"h\":\"图片\",\"t\":[\"![Title](/img/cover2.jpg) 圆括号里面是图片路径，也可以是一个图片链接 \",\"Title\",\"[id]: /img/cover2.jpg \\\"Optional title attribute\\\" ![Alt text][id] \",\"Optional title attribute\"]},\"50\":{\"h\":\"字体\",\"t\":[\"正常 **粗体** _斜体1_ *斜体2* ~~删除线~~ \",\"正常粗体斜体1斜体2删除线\",\"<font face=\\\"黑体\\\">我是黑体字</font> <font face=\\\"微软雅黑\\\">我是微软雅黑</font> <font face=\\\"STCAIYUN\\\">我是华文彩云</font> <font color=#0099ff size=12 face=\\\"黑体\\\">黑体</font> <font color=#00ffff size=3>null</font> <font color=gray size=5>gray</font> \"]},\"51\":{\"h\":\"Emoji\",\"t\":[\"你可以在 Emoji 列表 找到所有可用的 Emoji。\",\":smile: <空格><空格><换行> 换行 :laughing::smirk::stuck_out_tongue_winking_eye::kissing_smiling_eyes::european_castle::sunrise_over_mountains::ocean::ocean: \",\"😄 😆😏😜😙🏰🌄🌊🌊\"]},\"52\":{\"c\":[\"使用指南\"]},\"53\":{\"c\":[\"markdown\"]},\"54\":{\"h\":\"zerotier 安装教程\"},\"55\":{\"h\":\"异地组网技术 zerotier\",\"t\":[\"ZeroTier是一种基于虚拟专用网络（VPN）技术的软件定义网络（SDN）解决方案，可以帮助用户在不同地理位置的设备之间建立安全的局域网。它提供了一种简单且安全的方法来创建和管理虚拟网络，无论设备位于何处，都可以通过ZeroTier组网。\",\"下面是ZeroTier异地组网的基本逻辑：\"]},\"56\":{\"h\":\"1. 安装和配置ZeroTier：\",\"t\":[\"首先，你需要在要连接的每台设备上安装ZeroTier应用程序，可以去ZeroTier官网下载，并创建一个ZeroTier账户。\",\"在需要组网的设备上安装ZeroTier程序\"]},\"57\":{\"h\":\"2. 创建网络：\",\"t\":[\"在ZeroTier的管理界面中，你可以创建一个虚拟网络，并为该网络分配一个唯一的网络ID。这个网络ID将用于标识你的虚拟网络。\",\"创建一个唯一的虚拟网络\"]},\"58\":{\"h\":\"3. 加入网络：\",\"t\":[\"在每个设备上，你需要输入虚拟网络的网络ID，并在ZeroTier应用程序中选择加入网络。一旦设备成功加入网络，它们就可以通过ZeroTier建立安全的连接，参考。\",\"网络配置：在ZeroTier管理界面中，你可以配置网络的各种设置，例如子网分配、防火墙规则和路由设置。这些设置将影响到网络中各个设备之间的通信方式。\",\"设备通信：一旦设备成功加入网络并配置完毕，它们之间就可以建立安全的点对点连接。ZeroTier使用加密技术来保护设备之间的通信，确保数据的安全性和完整性。\",\"可选的高级配置：ZeroTier还提供了一些高级配置选项，例如流量限制、流量路由和多路径连接。这些选项可以根据具体需求进行调整，以优化网络性能和安全性。\",\"需要注意的是，ZeroTier并不是一个传统意义上的VPN，它更类似于一个虚拟的局域网。它通过创建一个虚拟网络层，将不同地理位置的设备连接在一起，使它们能够直接通信，就像它们连接在同一物理网络上一样。这种方法可以帮助用户轻松地实现设备之间的远程访问和协作，无需担心网络设置或复杂的端口转发配置。\"]},\"59\":{\"c\":[\"使用指南\"]},\"60\":{\"c\":[\"zerotier\"]},\"61\":{\"h\":\"我的第一篇博客\",\"t\":[\"My First Blog\"]},\"62\":{\"h\":\"我的第一篇博客\",\"t\":[\"My First Blog\"]},\"63\":{\"h\":\"Aigc\"},\"64\":{\"h\":\"Blog\"},\"65\":{\"h\":\"Code\"},\"66\":{\"h\":\"Note Taking\"},\"67\":{\"h\":\"Paper\"}},\"dirtCount\":0,\"index\":[[\"我的第一篇博客\",{\"0\":{\"61\":1,\"62\":1}}],[\"无需担心网络设置或复杂的端口转发配置\",{\"1\":{\"58\":1}}],[\"无论设备位于何处\",{\"1\":{\"55\":1}}],[\"就像它们连接在同一物理网络上一样\",{\"1\":{\"58\":1}}],[\"将不同地理位置的设备连接在一起\",{\"1\":{\"58\":1}}],[\"需要注意的是\",{\"1\":{\"58\":1}}],[\"以优化网络性能和安全性\",{\"1\":{\"58\":1}}],[\"流量路由和多路径连接\",{\"1\":{\"58\":1}}],[\"确保数据的安全性和完整性\",{\"1\":{\"58\":1}}],[\"设备通信\",{\"1\":{\"58\":1}}],[\"设计的易于使用和学习\",{\"1\":{\"11\":1}}],[\"这种方法可以帮助用户轻松地实现设备之间的远程访问和协作\",{\"1\":{\"58\":1}}],[\"这些选项可以根据具体需求进行调整\",{\"1\":{\"58\":1}}],[\"这些设置将影响到网络中各个设备之间的通信方式\",{\"1\":{\"58\":1}}],[\"这个网络id将用于标识你的虚拟网络\",{\"1\":{\"57\":1}}],[\"防火墙规则和路由设置\",{\"1\":{\"58\":1}}],[\"例如流量限制\",{\"1\":{\"58\":1}}],[\"例如子网分配\",{\"1\":{\"58\":1}}],[\"例如显示\",{\"1\":{\"34\":1}}],[\"网络配置\",{\"1\":{\"58\":1}}],[\"一旦设备成功加入网络并配置完毕\",{\"1\":{\"58\":1}}],[\"一旦设备成功加入网络\",{\"1\":{\"58\":1}}],[\"一个简单的例子\",{\"1\":{\"12\":1}}],[\"加入网络\",{\"0\":{\"58\":1}}],[\"并在zerotier应用程序中选择加入网络\",{\"1\":{\"58\":1}}],[\"并为该网络分配一个唯一的网络id\",{\"1\":{\"57\":1}}],[\"并创建一个zerotier账户\",{\"1\":{\"56\":1}}],[\"并使用\",{\"1\":{\"27\":1}}],[\"你需要输入虚拟网络的网络id\",{\"1\":{\"58\":1}}],[\"你需要在要连接的每台设备上安装zerotier应用程序\",{\"1\":{\"56\":1}}],[\"你可以配置网络的各种设置\",{\"1\":{\"58\":1}}],[\"你可以创建一个虚拟网络\",{\"1\":{\"57\":1}}],[\"你可以在\",{\"1\":{\"51\":1}}],[\"首先\",{\"1\":{\"56\":1}}],[\"下面是zerotier异地组网的基本逻辑\",{\"1\":{\"55\":1}}],[\"解决方案\",{\"1\":{\"55\":1}}],[\"技术的软件定义网络\",{\"1\":{\"55\":1}}],[\"异地组网技术\",{\"0\":{\"55\":1}}],[\"zerotier并不是一个传统意义上的vpn\",{\"1\":{\"58\":1}}],[\"zerotier还提供了一些高级配置选项\",{\"1\":{\"58\":1}}],[\"zerotier使用加密技术来保护设备之间的通信\",{\"1\":{\"58\":1}}],[\"zerotier是一种基于虚拟专用网络\",{\"1\":{\"55\":1}}],[\"zerotier\",{\"0\":{\"54\":1,\"55\":1},\"2\":{\"60\":1}}],[\"zsh介绍\",{\"1\":{\"39\":1}}],[\"zsh\",{\"1\":{\"39\":4}}],[\"zshrc\",{\"1\":{\"27\":1,\"39\":4}}],[\"😆😏😜😙🏰🌄🌊🌊\",{\"1\":{\"51\":1}}],[\"😆😆😆😆😆\",{\"1\":{\"39\":1}}],[\"😄\",{\"1\":{\"51\":1}}],[\"kissing\",{\"1\":{\"51\":1}}],[\"换行\",{\"1\":{\"51\":1}}],[\"找到所有可用的\",{\"1\":{\"51\":1}}],[\"找到python目录\",{\"1\":{\"39\":1}}],[\"微软雅黑\",{\"1\":{\"50\":1}}],[\"黑体\",{\"1\":{\"50\":2}}],[\"斜体2\",{\"1\":{\"50\":1}}],[\"斜体1\",{\"1\":{\"50\":1}}],[\"粗体\",{\"1\":{\"50\":1}}],[\"正常粗体斜体1斜体2删除线\",{\"1\":{\"50\":1}}],[\"正常\",{\"1\":{\"50\":1}}],[\"字体\",{\"0\":{\"50\":1}}],[\"也可以是一个图片链接\",{\"1\":{\"49\":1}}],[\"圆括号里面是图片路径\",{\"1\":{\"49\":1}}],[\"jpg\",{\"1\":{\"49\":2}}],[\"jupyter\",{\"1\":{\"39\":5}}],[\"图片\",{\"0\":{\"49\":1}}],[\"7\",{\"1\":{\"48\":1}}],[\"|9\",{\"1\":{\"48\":1}}],[\"|8\",{\"1\":{\"48\":1}}],[\"|7\",{\"1\":{\"48\":1}}],[\"|6\",{\"1\":{\"48\":1}}],[\"|5\",{\"1\":{\"48\":1}}],[\"|4\",{\"1\":{\"48\":1}}],[\"|3\",{\"1\":{\"48\":1}}],[\"|2\",{\"1\":{\"48\":1}}],[\"|1\",{\"1\":{\"48\":1}}],[\"|\",{\"1\":{\"48\":8}}],[\"|right\",{\"1\":{\"48\":1}}],[\"|middle\",{\"1\":{\"48\":1}}],[\"|left\",{\"1\":{\"48\":1}}],[\"表格\",{\"0\":{\"48\":1}}],[\"都可以通过zerotier组网\",{\"1\":{\"55\":1}}],[\"都可以\",{\"1\":{\"47\":1}}],[\"都是属于shell\",{\"1\":{\"39\":1}}],[\"分割线\",{\"0\":{\"47\":1}}],[\"学的不仅是技术更是梦想\",{\"1\":{\"46\":2}}],[\"学习\",{\"0\":{\"6\":1,\"11\":1}}],[\"菜鸟教程\",{\"1\":{\"46\":2}}],[\"+\",{\"1\":{\"46\":3}}],[\"第三项\",{\"1\":{\"46\":2}}],[\"第二项\",{\"1\":{\"46\":6}}],[\"第二层嵌套\",{\"1\":{\"46\":2}}],[\"第一项\",{\"1\":{\"46\":6}}],[\"第一层嵌套\",{\"1\":{\"46\":2}}],[\"最外层\",{\"1\":{\"46\":2}}],[\">黑体<\",{\"1\":{\"50\":1}}],[\">我是华文彩云<\",{\"1\":{\"50\":1}}],[\">我是微软雅黑<\",{\"1\":{\"50\":1}}],[\">我是黑体字<\",{\"1\":{\"50\":1}}],[\">\",{\"1\":{\"46\":14}}],[\">>\",{\"1\":{\"39\":1}}],[\"区块中使用列表\",{\"1\":{\"46\":2}}],[\"区块\",{\"0\":{\"46\":1}}],[\"列表\",{\"0\":{\"45\":1},\"1\":{\"51\":1}}],[\"4\",{\"1\":{\"44\":1,\"48\":1}}],[\"480\",{\"1\":{\"32\":1}}],[\"2\",{\"0\":{\"57\":1},\"1\":{\"44\":1,\"45\":1,\"46\":1,\"48\":1}}],[\"202\",{\"1\":{\"32\":1}}],[\"标题\",{\"0\":{\"44\":1}}],[\"然后将python目录加进去\",{\"1\":{\"39\":1}}],[\"目录下新建\",{\"1\":{\"39\":1}}],[\"9\",{\"1\":{\"39\":2,\"48\":1}}],[\"拼出python的bin目录\",{\"1\":{\"39\":1}}],[\"是zsh的配置文件\",{\"1\":{\"39\":1}}],[\"是一个可选属性\",{\"1\":{\"15\":1}}],[\"是一个用于构建api的现代\",{\"1\":{\"11\":1}}],[\"是一个用于\",{\"1\":{\"7\":1}}],[\"而\",{\"1\":{\"39\":1}}],[\"强大\",{\"1\":{\"39\":1}}],[\"拥有极其丰富的插件\",{\"1\":{\"39\":1}}],[\"但是比bash好用\",{\"1\":{\"39\":1}}],[\"把python的路径添加到zsh中即可首先查jupyter\",{\"1\":{\"39\":1}}],[\"则说明python的环境变量没有添加到\",{\"1\":{\"39\":1}}],[\"如有以下报错\",{\"1\":{\"39\":1}}],[\"启动jupyter\",{\"1\":{\"39\":1}}],[\"终端执行pip安装命令\",{\"1\":{\"39\":1}}],[\"参考\",{\"0\":{\"35\":1},\"1\":{\"58\":1}}],[\"参数0表示使用默认的摄像头\",{\"1\":{\"32\":1}}],[\"保存等\",{\"1\":{\"34\":1}}],[\"检查帧是否成功读取\",{\"1\":{\"34\":1}}],[\"检查python路径\",{\"1\":{\"27\":1}}],[\"连接到rtsp视频流\",{\"1\":{\"34\":1}}],[\"<空格><空格><换行>\",{\"1\":{\"51\":1}}],[\"<font\",{\"1\":{\"50\":6}}],[\"<rtsp\",{\"1\":{\"34\":2}}],[\"<password>\",{\"1\":{\"34\":1}}],[\"<username>\",{\"1\":{\"34\":1}}],[\"包含用户名和密码\",{\"1\":{\"34\":1}}],[\"接受rtsp视频流\",{\"0\":{\"34\":1}}],[\"关闭所有打开的窗口\",{\"1\":{\"32\":1,\"34\":1}}],[\"释放videocapture对象\",{\"1\":{\"32\":1,\"34\":1}}],[\"ocean\",{\"1\":{\"51\":2}}],[\"over\",{\"1\":{\"51\":1}}],[\"out\",{\"1\":{\"51\":1}}],[\"ok啦\",{\"1\":{\"39\":1}}],[\"ok\",{\"1\":{\"33\":1}}],[\"ord\",{\"1\":{\"32\":1,\"34\":1}}],[\"optional\",{\"1\":{\"49\":2}}],[\"opt\",{\"1\":{\"27\":1}}],[\"键退出循环\",{\"1\":{\"32\":1,\"34\":1}}],[\"按下\",{\"1\":{\"32\":1,\"34\":1}}],[\"6\",{\"1\":{\"44\":1,\"48\":1}}],[\"640\",{\"1\":{\"32\":1}}],[\"6+并基于标准的python类型提示\",{\"1\":{\"11\":1}}],[\"读取视频流的帧\",{\"1\":{\"32\":1,\"34\":1}}],[\"5\",{\"1\":{\"44\":1,\"48\":1}}],[\"5555\",{\"1\":{\"32\":1}}],[\"54\",{\"1\":{\"32\":1}}],[\"视频流接收端\",{\"0\":{\"33\":1}}],[\"视频流发送端\",{\"0\":{\"32\":1}}],[\"视频流传输\",{\"0\":{\"30\":1}}],[\"传输视频流\",{\"0\":{\"31\":1}}],[\"传递给\",{\"1\":{\"13\":1}}],[\"~~删除线~~\",{\"1\":{\"50\":1}}],[\"~\",{\"1\":{\"27\":1,\"39\":3}}],[\"其安装路径在\",{\"1\":{\"27\":1}}],[\"$\",{\"1\":{\"26\":1}}],[\"和\",{\"0\":{\"25\":1},\"1\":{\"39\":1,\"47\":2}}],[\"和丰富的功能\",{\"1\":{\"7\":1}}],[\"8\",{\"1\":{\"48\":1}}],[\"8554\",{\"1\":{\"24\":1}}],[\"8000\",{\"1\":{\"12\":2}}],[\"播放rtsp流\",{\"1\":{\"24\":1}}],[\"vpn\",{\"1\":{\"55\":1}}],[\"videocapture\",{\"1\":{\"32\":1,\"34\":1}}],[\"videostream\",{\"1\":{\"32\":1}}],[\"video\",{\"1\":{\"32\":1,\"34\":1,\"35\":1},\"2\":{\"37\":1}}],[\"videotestsrc\",{\"1\":{\"24\":1}}],[\"value\",{\"1\":{\"14\":1}}],[\"european\",{\"1\":{\"51\":1}}],[\"eyes\",{\"1\":{\"51\":1}}],[\"eye\",{\"1\":{\"51\":1}}],[\"emoji\",{\"0\":{\"51\":1},\"1\":{\"51\":2}}],[\"export\",{\"1\":{\"39\":1}}],[\"examples\",{\"1\":{\"24\":1}}],[\"echo\",{\"1\":{\"39\":1}}],[\"e260bd081224\",{\"1\":{\"35\":1}}],[\"editing\",{\"1\":{\"27\":1}}],[\"enum\",{\"1\":{\"14\":3}}],[\"测试\",{\"1\":{\"24\":1}}],[\"编译\",{\"1\":{\"24\":1}}],[\"切到1\",{\"1\":{\"24\":1}}],[\"克隆git库\",{\"1\":{\"24\":1}}],[\"源码编译\",{\"0\":{\"24\":1}}],[\"x264enc\",{\"1\":{\"24\":1}}],[\"x\",{\"1\":{\"23\":1}}],[\"laughing\",{\"1\":{\"51\":1}}],[\"launch\",{\"1\":{\"24\":2}}],[\"live\",{\"1\":{\"35\":1}}],[\"library\",{\"1\":{\"39\":2}}],[\"libgstrtspserver\",{\"1\":{\"24\":1}}],[\"libgstreamer1\",{\"1\":{\"23\":1,\"24\":1}}],[\"libav\",{\"1\":{\"23\":1,\"27\":1}}],[\"left\",{\"1\":{\"48\":1}}],[\"lee\",{\"1\":{\"39\":2}}],[\"len\",{\"1\":{\"15\":1}}],[\"lenet\",{\"1\":{\"14\":3}}],[\"lecnn\",{\"1\":{\"14\":1}}],[\"learning\",{\"1\":{\"14\":1}}],[\"搭建rtsp服务器\",{\"0\":{\"21\":1,\"22\":1}}],[\"green\",{\"1\":{\"45\":6}}],[\"githubusercontent\",{\"1\":{\"26\":1}}],[\"github\",{\"1\":{\"24\":1}}],[\"git\",{\"1\":{\"24\":3}}],[\"gst\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"24\":3,\"27\":8}}],[\"gstreamer1\",{\"1\":{\"23\":13}}],[\"gstreamer\",{\"0\":{\"21\":1,\"22\":1,\"25\":1},\"1\":{\"24\":1,\"27\":1},\"2\":{\"20\":1,\"29\":1}}],[\"gstreamer教程\",{\"0\":{\"18\":1}}],[\"gtk3\",{\"1\":{\"23\":1}}],[\"gl\",{\"1\":{\"23\":1}}],[\"good\",{\"1\":{\"23\":1,\"27\":1}}],[\"gethostname\",{\"1\":{\"32\":1}}],[\"get\",{\"1\":{\"12\":2,\"13\":1,\"14\":2,\"15\":1}}],[\"适合小型文件\",{\"1\":{\"15\":1}}],[\"形式\",{\"1\":{\"15\":2}}],[\"形式读取和接收文件内容\",{\"1\":{\"15\":1}}],[\"形式和\",{\"1\":{\"15\":1}}],[\"blog\",{\"0\":{\"64\":1},\"1\":{\"61\":1,\"62\":1}}],[\"blue\",{\"1\":{\"45\":6}}],[\"b\",{\"1\":{\"33\":1}}],[\"break\",{\"1\":{\"32\":1,\"34\":2}}],[\"brew\",{\"0\":{\"26\":1},\"1\":{\"27\":9}}],[\"bin\",{\"1\":{\"26\":1,\"27\":1,\"39\":2}}],[\"bash\",{\"1\":{\"26\":1,\"39\":1}}],[\"base\",{\"1\":{\"23\":1,\"27\":1}}],[\"basemodel\",{\"1\":{\"15\":3}}],[\"bad\",{\"1\":{\"23\":1,\"27\":1}}],[\"bytes形式是将文件存储在内存中\",{\"1\":{\"15\":1}}],[\"bytes\",{\"1\":{\"15\":4}}],[\"castle\",{\"1\":{\"51\":1}}],[\"cam\",{\"1\":{\"32\":4,\"33\":2}}],[\"cap\",{\"1\":{\"32\":3,\"34\":3}}],[\"code\",{\"0\":{\"65\":1}}],[\"color=gray\",{\"1\":{\"50\":1}}],[\"color=\",{\"1\":{\"50\":2}}],[\"cover2\",{\"1\":{\"49\":2}}],[\"connect\",{\"1\":{\"32\":1}}],[\"command\",{\"1\":{\"39\":2}}],[\"com\",{\"1\":{\"24\":1,\"26\":1,\"35\":1}}],[\"cv2\",{\"1\":{\"32\":6,\"33\":3,\"34\":5}}],[\"curl\",{\"1\":{\"26\":1}}],[\"c\",{\"1\":{\"26\":1}}],[\"checkout\",{\"1\":{\"24\":1}}],[\"cd\",{\"1\":{\"24\":2}}],[\"clone\",{\"1\":{\"24\":1}}],[\"class\",{\"1\":{\"14\":1,\"15\":1}}],[\"create\",{\"1\":{\"15\":3}}],[\"默认值为none\",{\"1\":{\"15\":1}}],[\"中导入\",{\"1\":{\"15\":1}}],[\"从\",{\"1\":{\"15\":1}}],[\"模型来声明请求体\",{\"1\":{\"15\":1}}],[\"用于部分更新资源\",{\"1\":{\"15\":1}}],[\"用于删除资源\",{\"1\":{\"15\":1}}],[\"用于更新资源\",{\"1\":{\"15\":1}}],[\"用于提交数据\",{\"1\":{\"15\":1}}],[\"用于获取资源\",{\"1\":{\"15\":1}}],[\"请求文件\",{\"1\":{\"15\":1}}],[\"请求方法\",{\"1\":{\"15\":1}}],[\"请求体是客户端发送给\",{\"1\":{\"15\":1}}],[\"请求体\",{\"0\":{\"15\":1}}],[\"发送给客户端的数据\",{\"1\":{\"15\":1}}],[\"响应体是\",{\"1\":{\"15\":1}}],[\"相关信息\",{\"1\":{\"14\":1,\"27\":1}}],[\"sdn\",{\"1\":{\"55\":1}}],[\"sunrise\",{\"1\":{\"51\":1}}],[\"sudo\",{\"1\":{\"23\":1,\"24\":1}}],[\"smiling\",{\"1\":{\"51\":1}}],[\"smile\",{\"1\":{\"51\":1}}],[\"smirk\",{\"1\":{\"51\":1}}],[\"smartphones\",{\"1\":{\"35\":1}}],[\"send\",{\"1\":{\"32\":1,\"33\":1}}],[\"sender\",{\"1\":{\"32\":2}}],[\"services\",{\"1\":{\"27\":1}}],[\"server\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"24\":2,\"27\":1,\"34\":2}}],[\"socket\",{\"1\":{\"32\":2}}],[\"souce\",{\"1\":{\"27\":1}}],[\"some\",{\"1\":{\"14\":1}}],[\"show\",{\"1\":{\"39\":1}}],[\"shape\",{\"1\":{\"32\":1,\"33\":1}}],[\"sh\",{\"1\":{\"24\":1,\"26\":1}}],[\"size=5>gray<\",{\"1\":{\"50\":1}}],[\"size=3>null<\",{\"1\":{\"50\":1}}],[\"size=12\",{\"1\":{\"50\":1}}],[\"size\",{\"1\":{\"15\":1}}],[\"stuck\",{\"1\":{\"51\":1}}],[\"stun\",{\"1\":{\"7\":1}}],[\"stcaiyun\",{\"1\":{\"50\":1}}],[\"streaming\",{\"1\":{\"35\":1},\"2\":{\"37\":1}}],[\"str\",{\"1\":{\"12\":1,\"14\":1,\"15\":2}}],[\"standard\",{\"1\":{\"12\":1}}],[\"note\",{\"0\":{\"66\":1}}],[\"notebook\",{\"1\":{\"39\":1}}],[\"not\",{\"1\":{\"34\":1,\"39\":2}}],[\"none\",{\"1\":{\"12\":2,\"15\":4}}],[\"name=pay0\",{\"1\":{\"24\":1}}],[\"name\",{\"1\":{\"14\":10,\"15\":1,\"34\":1}}],[\"my\",{\"1\":{\"61\":1,\"62\":1}}],[\"mountains\",{\"1\":{\"51\":1}}],[\"model\",{\"1\":{\"14\":11}}],[\"models\",{\"1\":{\"14\":1}}],[\"modelname\",{\"1\":{\"14\":3}}],[\"middle\",{\"1\":{\"48\":1}}],[\"multiple\",{\"1\":{\"35\":1}}],[\"multipart\",{\"1\":{\"15\":1}}],[\"markdown\",{\"0\":{\"42\":1,\"43\":1},\"2\":{\"53\":1}}],[\"mac\",{\"1\":{\"39\":2},\"2\":{\"41\":1}}],[\"macbook\",{\"0\":{\"25\":1,\"38\":1},\"2\":{\"29\":1}}],[\"main\",{\"1\":{\"12\":5,\"34\":3}}],[\"message\",{\"1\":{\"14\":3}}],[\"枚举\",{\"1\":{\"14\":2}}],[\"预设值\",{\"0\":{\"14\":1}}],[\"函数\",{\"1\":{\"13\":1}}],[\"格式化字符串相同的语法来声明路径的参数\",{\"1\":{\"13\":1}}],[\"路径参数\",{\"0\":{\"13\":1},\"1\":{\"13\":1}}],[\"doc\",{\"1\":{\"23\":1}}],[\"docs\",{\"1\":{\"12\":1}}],[\"destroyallwindows\",{\"1\":{\"32\":1,\"34\":1}}],[\"description=\",{\"1\":{\"15\":2}}],[\"description\",{\"1\":{\"15\":1}}],[\"devtools\",{\"1\":{\"27\":1}}],[\"dev\",{\"1\":{\"24\":1}}],[\"delete\",{\"1\":{\"15\":1}}],[\"deep\",{\"1\":{\"14\":1}}],[\"def\",{\"1\":{\"12\":2,\"13\":1,\"14\":1,\"15\":3,\"34\":1}}],[\"文档\",{\"1\":{\"12\":1}}],[\"文件名以及自定义功能\",{\"1\":{\"39\":1}}],[\"文件中通过\",{\"1\":{\"12\":1}}],[\"文件\",{\"1\":{\"12\":1,\"39\":1}}],[\"交互式\",{\"1\":{\"12\":1}}],[\"144\",{\"1\":{\"32\":1}}],[\"10\",{\"1\":{\"32\":1}}],[\"18\",{\"1\":{\"24\":1}}],[\"18分支\",{\"1\":{\"24\":1}}],[\"1\",{\"0\":{\"56\":1},\"1\":{\"12\":2,\"24\":4,\"32\":1,\"33\":1,\"34\":1,\"44\":1,\"45\":1,\"46\":1,\"48\":1}}],[\"127\",{\"1\":{\"12\":2,\"24\":1}}],[\"00ffff\",{\"1\":{\"50\":1}}],[\"0099ff\",{\"1\":{\"50\":1}}],[\"0xff\",{\"1\":{\"32\":1,\"34\":1}}],[\"0\",{\"1\":{\"12\":4,\"23\":15,\"24\":5,\"32\":1}}],[\"h6\",{\"1\":{\"44\":1}}],[\"h5\",{\"1\":{\"44\":1}}],[\"h4\",{\"1\":{\"44\":1}}],[\"h3\",{\"1\":{\"44\":1}}],[\"h2\",{\"1\":{\"44\":1}}],[\"h1\",{\"1\":{\"44\":1}}],[\"hub\",{\"1\":{\"33\":3}}],[\"header\",{\"1\":{\"44\":6}}],[\"head\",{\"1\":{\"26\":1}}],[\"hello\",{\"1\":{\"12\":1}}],[\"homebrew\",{\"1\":{\"26\":1,\"27\":1}}],[\"have\",{\"1\":{\"14\":1}}],[\"https\",{\"1\":{\"24\":1,\"26\":1,\"35\":1}}],[\"http\",{\"1\":{\"12\":2,\"15\":1}}],[\"访问\",{\"1\":{\"12\":1}}],[\"仅在开发时使用该选项\",{\"1\":{\"12\":1}}],[\"让服务器在更新代码后重新启动\",{\"1\":{\"12\":1}}],[\"创建网络\",{\"0\":{\"57\":1}}],[\"创建videocapture对象\",{\"1\":{\"32\":1,\"34\":1}}],[\"创建数据模型\",{\"1\":{\"15\":1}}],[\"创建的对象\",{\"1\":{\"12\":1}}],[\"创建一个唯一的虚拟网络\",{\"1\":{\"57\":1}}],[\"创建一个\",{\"1\":{\"12\":1,\"14\":1}}],[\"在zerotier管理界面中\",{\"1\":{\"58\":1}}],[\"在zerotier的管理界面中\",{\"1\":{\"57\":1}}],[\"在每个设备上\",{\"1\":{\"58\":1}}],[\"在需要组网的设备上安装zerotier程序\",{\"1\":{\"56\":1}}],[\"在这里对帧进行处理\",{\"1\":{\"34\":1}}],[\"在使用的时候要\",{\"1\":{\"27\":1}}],[\"在使用brew安装gstreamer的时候会安装对应版本的python\",{\"1\":{\"27\":1}}],[\"在\",{\"1\":{\"12\":1,\"39\":1}}],[\"命令含义\",{\"1\":{\"12\":1}}],[\"运行\",{\"1\":{\"12\":1}}],[\"qt5\",{\"1\":{\"23\":1}}],[\"q\",{\"1\":{\"12\":3,\"32\":2,\"34\":2}}],[\"winking\",{\"1\":{\"51\":1}}],[\"with\",{\"1\":{\"35\":1}}],[\"waitkey\",{\"1\":{\"32\":1,\"33\":1,\"34\":1}}],[\"while\",{\"1\":{\"32\":1,\"33\":1,\"34\":1}}],[\"which\",{\"1\":{\"27\":1}}],[\"world\",{\"1\":{\"12\":1}}],[\"web\",{\"1\":{\"7\":1},\"2\":{\"10\":1,\"17\":1}}],[\"webrtc\",{\"1\":{\"7\":3}}],[\"right\",{\"1\":{\"48\":1}}],[\"raw\",{\"1\":{\"26\":1}}],[\"rtph264pay\",{\"1\":{\"24\":1}}],[\"rtsp视频流地址\",{\"1\":{\"34\":1}}],[\"rtsp\",{\"0\":{\"24\":1,\"25\":1},\"1\":{\"24\":2,\"27\":1,\"34\":3}}],[\"red\",{\"1\":{\"45\":6}}],[\"reply\",{\"1\":{\"33\":1}}],[\"recv\",{\"1\":{\"33\":1}}],[\"release\",{\"1\":{\"32\":1,\"34\":1}}],[\"reload\",{\"1\":{\"12\":2}}],[\"ret\",{\"1\":{\"32\":1,\"34\":2}}],[\"return\",{\"1\":{\"12\":2,\"13\":1,\"14\":3,\"15\":3}}],[\"resize\",{\"1\":{\"32\":1}}],[\"resized\",{\"1\":{\"32\":3}}],[\"residuals\",{\"1\":{\"14\":1}}],[\"resnet\",{\"1\":{\"14\":2}}],[\"read\",{\"1\":{\"12\":2,\"13\":2,\"15\":2,\"32\":1,\"34\":1}}],[\"root\",{\"1\":{\"12\":1}}],[\"==\",{\"1\":{\"14\":1,\"32\":1,\"34\":2}}],[\"=\",{\"1\":{\"12\":3,\"13\":1,\"14\":4,\"15\":6,\"32\":5,\"33\":2,\"34\":3}}],[\"实例\",{\"1\":{\"12\":1}}],[\"实时通信\",{\"1\":{\"7\":1}}],[\"users\",{\"1\":{\"39\":2}}],[\"using\",{\"1\":{\"35\":1}}],[\"url\",{\"1\":{\"34\":2}}],[\"uri=rtsp\",{\"1\":{\"24\":1}}],[\"ugly\",{\"1\":{\"23\":1,\"27\":1}}],[\"ubuntu\",{\"0\":{\"22\":1},\"1\":{\"32\":1}}],[\"upload\",{\"1\":{\"15\":1}}],[\"uploadfile形式忽略内存限制\",{\"1\":{\"15\":1}}],[\"uploadfile\",{\"1\":{\"15\":6}}],[\"union\",{\"1\":{\"12\":2,\"15\":3}}],[\"uvicorn\",{\"1\":{\"12\":3}}],[\"ip>\",{\"1\":{\"34\":1}}],[\"img\",{\"1\":{\"49\":2}}],[\"imshow\",{\"1\":{\"32\":1,\"33\":1,\"34\":1}}],[\"imutils\",{\"1\":{\"32\":1}}],[\"imagehub\",{\"1\":{\"33\":1}}],[\"image\",{\"1\":{\"32\":1,\"33\":4}}],[\"imagezmq\",{\"0\":{\"31\":1},\"1\":{\"32\":2,\"33\":2,\"35\":1},\"2\":{\"37\":1}}],[\"imagesender\",{\"1\":{\"32\":1}}],[\"images\",{\"1\":{\"14\":1}}],[\"import\",{\"1\":{\"12\":2,\"13\":1,\"14\":2,\"15\":4,\"32\":4,\"33\":2,\"34\":1}}],[\"is\",{\"1\":{\"14\":1}}],[\"if\",{\"1\":{\"14\":2,\"32\":1,\"34\":3}}],[\"int\",{\"1\":{\"12\":1,\"13\":1}}],[\"install\",{\"1\":{\"8\":1,\"12\":2,\"15\":1,\"23\":1,\"24\":1,\"26\":2,\"27\":9,\"39\":1}}],[\"id\",{\"1\":{\"12\":4,\"13\":6,\"32\":4,\"33\":2,\"49\":2}}],[\"item\",{\"1\":{\"12\":5,\"13\":8,\"15\":5}}],[\"items\",{\"1\":{\"12\":1,\"13\":1,\"15\":1}}],[\"first\",{\"1\":{\"61\":1,\"62\":1}}],[\"filename\",{\"1\":{\"15\":2}}],[\"files\",{\"1\":{\"15\":1}}],[\"file\",{\"1\":{\"15\":12}}],[\"font>\",{\"1\":{\"50\":6}}],[\"found\",{\"1\":{\"39\":2}}],[\"face=\",{\"1\":{\"50\":4}}],[\"fastapi会生成自定义文档\",{\"1\":{\"12\":1}}],[\"fastapi\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"12\":6,\"13\":3,\"14\":3,\"15\":7},\"2\":{\"17\":1}}],[\"frame\",{\"1\":{\"32\":7,\"33\":3,\"34\":3}}],[\"from\",{\"1\":{\"12\":2,\"13\":1,\"14\":2,\"15\":4,\"32\":1}}],[\"fssl\",{\"1\":{\"26\":1}}],[\"float\",{\"1\":{\"15\":2}}],[\"ftw\",{\"1\":{\"14\":1}}],[\"生产可用级别的代码\",{\"1\":{\"11\":1}}],[\"健壮\",{\"1\":{\"11\":1}}],[\"通过不同的参数声明实现丰富功能\",{\"1\":{\"11\":1}}],[\"使它们能够直接通信\",{\"1\":{\"58\":1}}],[\"使代码重复最小化\",{\"1\":{\"11\":1}}],[\"使用教程记录\",{\"0\":{\"43\":1}}],[\"使用教程\",{\"0\":{\"42\":1}}],[\"使用opencv从\",{\"0\":{\"34\":1}}],[\"使用brew\",{\"0\":{\"27\":1}}],[\"使用\",{\"0\":{\"31\":1},\"1\":{\"15\":1}}],[\"使用与\",{\"1\":{\"13\":1}}],[\"使用python\",{\"1\":{\"11\":1}}],[\"使用指南\",{\"2\":{\"9\":1,\"16\":1,\"19\":1,\"28\":1,\"36\":1,\"40\":1,\"52\":1,\"59\":1}}],[\"简短\",{\"1\":{\"11\":1}}],[\"简单\",{\"1\":{\"11\":1}}],[\"阅读文档的时间更短\",{\"1\":{\"11\":1}}],[\"减少调试时间\",{\"1\":{\"11\":1}}],[\"减少约40\",{\"1\":{\"11\":1}}],[\"处处皆可自动补全\",{\"1\":{\"11\":1}}],[\"处理网络连接问题\",{\"1\":{\"7\":1}}],[\"处理音视频流和数据传输的功能\",{\"1\":{\"7\":1}}],[\"极佳的编辑器支持\",{\"1\":{\"11\":1}}],[\"智能\",{\"1\":{\"11\":1}}],[\"导致错误\",{\"1\":{\"11\":1}}],[\"开发者\",{\"1\":{\"11\":1}}],[\"更少bug\",{\"1\":{\"11\":1}}],[\"至300\",{\"1\":{\"11\":1}}],[\"高效编码\",{\"1\":{\"11\":1}}],[\"高性能\",{\"1\":{\"11\":1}}],[\"归功于starlette和pydantic\",{\"1\":{\"11\":1}}],[\"可选的高级配置\",{\"1\":{\"58\":1}}],[\"可以去zerotier官网下载\",{\"1\":{\"56\":1}}],[\"可以帮助用户在不同地理位置的设备之间建立安全的局域网\",{\"1\":{\"55\":1}}],[\"可以大大提高linux效率\",{\"1\":{\"39\":1}}],[\"可以构建视频会议\",{\"1\":{\"7\":1}}],[\"可传输大型文件\",{\"1\":{\"15\":1}}],[\"可通过\",{\"1\":{\"15\":1}}],[\"可直接查看api接口和接受的参数属性\",{\"1\":{\"12\":1}}],[\"可与nodejs和go比肩的极高性能\",{\"1\":{\"11\":1}}],[\"3\",{\"0\":{\"58\":1},\"1\":{\"11\":1,\"39\":2,\"44\":1,\"45\":1,\"48\":1}}],[\"快速\",{\"1\":{\"11\":2}}],[\"paper\",{\"0\":{\"67\":1}}],[\"path=\",{\"1\":{\"39\":1}}],[\"patch\",{\"1\":{\"15\":1}}],[\"port>\",{\"1\":{\"34\":1}}],[\"post\",{\"1\":{\"15\":4}}],[\"print\",{\"1\":{\"32\":2,\"33\":1}}],[\"price\",{\"1\":{\"15\":1}}],[\"playbin\",{\"1\":{\"24\":1}}],[\"plugins\",{\"1\":{\"23\":4,\"27\":4}}],[\"pt=96\",{\"1\":{\"24\":1}}],[\"pulseaudio\",{\"1\":{\"23\":1}}],[\"put\",{\"1\":{\"15\":1}}],[\"pydantic\",{\"1\":{\"15\":3}}],[\"py\",{\"1\":{\"12\":2}}],[\"python3\",{\"1\":{\"27\":2}}],[\"python\",{\"1\":{\"7\":1,\"13\":1,\"14\":2,\"15\":1,\"39\":2},\"2\":{\"37\":1}}],[\"pip3\",{\"1\":{\"12\":2,\"15\":1,\"39\":2}}],[\"pip\",{\"1\":{\"8\":1}}],[\"安装和配置zerotier\",{\"0\":{\"56\":1}}],[\"安装教程\",{\"0\":{\"54\":1}}],[\"安装信息\",{\"1\":{\"39\":1}}],[\"安装步骤\",{\"0\":{\"39\":1}}],[\"安装jupyter\",{\"0\":{\"38\":1}}],[\"安装gstreamer\",{\"0\":{\"27\":1}}],[\"安装搭建\",{\"0\":{\"22\":1}}],[\"安装依赖库\",{\"0\":{\"23\":1},\"1\":{\"15\":1}}],[\"安装aigc服务器\",{\"1\":{\"12\":1}}],[\"安装fastapi\",{\"1\":{\"12\":1}}],[\"安装\",{\"0\":{\"8\":1,\"12\":1,\"25\":1,\"26\":1}}],[\"帮助你轻松实现基于\",{\"1\":{\"7\":1}}],[\"服务器\",{\"1\":{\"7\":1}}],[\"taking\",{\"0\":{\"66\":1}}],[\"tax\",{\"1\":{\"15\":1}}],[\"text\",{\"1\":{\"49\":1}}],[\"test\",{\"1\":{\"24\":2}}],[\"title\",{\"1\":{\"49\":4}}],[\"true\",{\"1\":{\"32\":1,\"33\":1,\"34\":1}}],[\"tcp\",{\"1\":{\"32\":1}}],[\"tongue\",{\"1\":{\"51\":1}}],[\"touch\",{\"1\":{\"39\":1}}],[\"towardsdatascience\",{\"1\":{\"35\":1}}],[\"to=\",{\"1\":{\"32\":1}}],[\"tools\",{\"1\":{\"23\":1},\"2\":{\"2\":1,\"5\":1}}],[\"the\",{\"1\":{\"14\":1}}],[\"typing\",{\"1\":{\"12\":1,\"15\":1}}],[\"turn\",{\"1\":{\"7\":1}}],[\"它通过创建一个虚拟网络层\",{\"1\":{\"58\":1}}],[\"它更类似于一个虚拟的局域网\",{\"1\":{\"58\":1}}],[\"它们之间就可以建立安全的点对点连接\",{\"1\":{\"58\":1}}],[\"它们就可以通过zerotier建立安全的连接\",{\"1\":{\"58\":1}}],[\"它提供了一种简单且安全的方法来创建和管理虚拟网络\",{\"1\":{\"55\":1}}],[\"它具有如下这些优点\",{\"1\":{\"11\":1}}],[\"它支持信令服务器和\",{\"1\":{\"7\":1}}],[\"它建立在\",{\"1\":{\"7\":1}}],[\"音视频聊天和数据共享等应用\",{\"1\":{\"7\":1}}],[\"会话\",{\"1\":{\"7\":1}}],[\"提示\",{\"1\":{\"15\":1}}],[\"提示词工程\",{\"0\":{\"3\":1}}],[\"提高功能开发速度约200\",{\"1\":{\"11\":1}}],[\"提供了简洁的\",{\"1\":{\"7\":1}}],[\"提供了创建\",{\"1\":{\"7\":1}}],[\"支持异步和并发编程\",{\"1\":{\"7\":1}}],[\"attribute\",{\"1\":{\"49\":2}}],[\"autogen\",{\"1\":{\"24\":1}}],[\"as\",{\"1\":{\"15\":2}}],[\"async\",{\"1\":{\"13\":1,\"14\":1,\"15\":3}}],[\"asyncio\",{\"1\":{\"7\":1}}],[\"a\",{\"1\":{\"15\":2}}],[\"alt\",{\"1\":{\"49\":1}}],[\"alsa\",{\"1\":{\"23\":1}}],[\"all\",{\"1\":{\"14\":1}}],[\"alexnet\",{\"1\":{\"14\":3}}],[\"apt\",{\"1\":{\"23\":1,\"24\":1}}],[\"app\",{\"1\":{\"12\":7,\"13\":2,\"14\":2,\"15\":5}}],[\"api\",{\"1\":{\"7\":1,\"12\":1,\"15\":2}}],[\"aigc\",{\"0\":{\"63\":1}}],[\"aigc工具介绍\",{\"0\":{\"0\":1}}],[\"aiortc\",{\"0\":{\"6\":1},\"1\":{\"7\":3,\"8\":1},\"2\":{\"10\":1}}],[\"ai\",{\"2\":{\"1\":1,\"4\":1}}],[\"库之上\",{\"1\":{\"7\":1}}],[\"库\",{\"1\":{\"7\":1}}],[\"的自动补全参数\",{\"1\":{\"39\":1}}],[\"的配置文件中\",{\"1\":{\"39\":1}}],[\"的ip\",{\"1\":{\"32\":1}}],[\"的数据\",{\"1\":{\"15\":1}}],[\"的值将作为参数\",{\"1\":{\"13\":1}}],[\"的人为\",{\"1\":{\"11\":1}}],[\"的web框架\",{\"1\":{\"11\":1}}],[\"的实时通信解决方案\",{\"1\":{\"7\":1}}],[\"的\",{\"1\":{\"7\":1}}],[\"介绍\",{\"0\":{\"7\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
